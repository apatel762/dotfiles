#!/usr/bin/env bash

# shellcheck source=home/private_dot_local/bin/executable_bash_common
source "${HOME_ORIGINAL:-$HOME}"/.local/bin/bash_common

please_install flatpak
please_install notify-send

APPLICATION_IDS_FILE="${XDG_CONFIG_HOME:-$HOME/.config}"/.FLATHUB
ensure_file "$APPLICATION_IDS_FILE"
ensure_newline "$APPLICATION_IDS_FILE"

# Convert the lists to arrays (so that we can iterate over them)
EXPECTED_FLATPAKS=$(sort "$APPLICATION_IDS_FILE")
INSTALLED_FLATPAKS=$(flatpak --user list --app --columns=application | sort)
IFS=$'\n' read -rd '' -a EXPECTED_FLATPAKS_ARR <<<"$EXPECTED_FLATPAKS"
IFS=$'\n' read -rd '' -a INSTALLED_FLATPAKS_ARR <<<"$INSTALLED_FLATPAKS"

# Figure out which Flatpaks are missing
MISSING_FLATPAKS=()
for EXPECTED in "${EXPECTED_FLATPAKS_ARR[@]}"; do
  if ! [[ " ${INSTALLED_FLATPAKS_ARR[*]} " == *" $EXPECTED "* ]]; then
    MISSING_FLATPAKS+=("$EXPECTED")
  fi
done
if [ ${#MISSING_FLATPAKS[@]} -ne 0 ]; then
  MISSING_MESSAGE="You need to install: "
  for MISSING in "${MISSING_FLATPAKS[@]}"; do
    log "(Missing) $MISSING"
    MISSING_MESSAGE+="$MISSING, "
  done
  MISSING_MESSAGE+="please install any missing apps at your earliest convenience."
  notify-send --app-name="flatpak-drift" "Missing applications" "$MISSING_MESSAGE"
fi

# Figure out which Flatpaks are not being tracked
EXTRA_FLATPAKS=()
for INSTALLED in "${INSTALLED_FLATPAKS_ARR[@]}"; do
  if ! [[ " ${EXPECTED_FLATPAKS_ARR[*]} " == *" $INSTALLED "* ]]; then
    EXTRA_FLATPAKS+=("$INSTALLED")
  fi
done
if [ ${#EXTRA_FLATPAKS[@]} -ne 0 ]; then
  EXTRAS_MESSAGE="I don't recognise: "
  for EXTRA in "${EXTRA_FLATPAKS[@]}"; do
    log "(Extra) $EXTRA"
    EXTRAS_MESSAGE+="$EXTRA, "
  done
  EXTRAS_MESSAGE+="please update the documentation here: $APPLICATION_IDS_FILE."
  notify-send --app-name="flatpak-drift" "Extra applications" "$EXTRAS_MESSAGE"
fi
